Rapport Projet Programmation L3 S5 MIASHS 2014/2015
Elias Rhouzlane, Seurin Mathieu

Ce jeu de ‘SameGame’ est grandement inspiré par le mode 2 joueurs du jeu Pokemon Puzzle Challenge sur GameBoy (Jouable ici)
Ainsi le jeu a été pensé dans ce sens et donc beaucoup de choix ont été fait en prévision de l’implémentation des fonctionnalités du jeu d’origine. C’est pour cela que certains choix peuvent sembler étranges ou inadaptés, mais c’était en prévision de l’implémentation de fonctionnalités plus avancés.
Le jeu fonctionne de cette manière : 
Deux joueurs s’affrontent, chacun avec son plateau composé de diverses cases de couleurs. Les plateaux montent au fur et à mesure, de nouvelles lignes se rajoutent en bas. Une fois que le plateau atteint le haut du jeu, c’est perdu. Pour éviter ça les joueurs disposent d’un swapper (curseur) qui permet d’échanger deux cases. Lorsqu’au moins trois cases de la même couleur sont alignées (horizontalement ou verticalement) on supprime ces cases, permettant ainsi de libérer le plateau petit à petit. La montée du plateau est de plus en plus rapide, rendant ainsi l’affrontement de plus en plus tendu. En plus de cette montée, si les joueurs arrivent à faire des combinaisons de plus de 3 couleurs, ils peuvent envoyer des mauvais blocks à leurs adversaires. Ces mauvais blocks occupent plusieurs cases, ne peuvent être swappés, et ne sont pas désolidarisables. Le seul moyen de les détruire est de faire une combinaison de trois couleurs juste à côté d’eux, les transformant ainsi en cases de couleurs utilisables.

Les objectifs atteints : (à compléter à mort)
-	Avoir un menu avec des effets simples 
-	Avoir un moteur d’affichage permettant d’ajouter facilement de nouveau effets et de nouveaux menus
-	Pourvoir générer des plateaux remplis de cases de couleurs
-	Pouvoir afficher deux plateaux jouables en parallèles
-	Pouvoir déplacer le curseur à l’écran, parcourir les cases, échanger les cases
-	Avoir un algorithme de suppression des cases alignées en ligne et colonne (pas de diagonale) qui supprime en cas de chaine de plus de 3cases de même couleur
-	Pouvoir générer des mauvais blocks (‘bad’ block) qui sont composés de plusieurs cases simples, censés vous bloquer puisqu’ils ne sont ni interchangeables (pas de swap) ni désolidarisables
-	Avoir un algorithme qui gère la gravité du plateau non seulement pour les cases simples mais également pour les ‘bad’ blocks qui sont composés de cases simples ‘soudés’ entre elles, ainsi un ‘bad’ block ne peut tomber que si toutes les cases sous lui sont libres
Objectifs restants : (à compléter aussi)
-	Pouvoir envoyer de mauvais blocks à l’adversaire à l’aide de combos
-	Avoir des animations pendant le jeu (animations de suppression, animation lors de l’application de la gravité etc …)
-	

Choix en vrac à organiser :

Pourquoi le choix du hidden_row ? 
Le plateau est censé monter petit à petit et non pas par à-coup, ainsi on est censé voir la ligne du bas se montrer petit à petit jusqu’à ce qu’elle soit active. Ainsi il fallait qu’elle soit déjà générée et disponible pour pouvoir l’afficher (même si elle aurait été grisée pour montrer qu’elle n’est pas encore active)
Ceci a pas mal de conséquences, notamment de lors des parcours de board, les indices commencent souvent à 1 pour les lignes (row), bien qu’ils commencent à 0 pour les colonnes (col)

Les ‘bad’ blocks :
Les bad blocks ont posés un problème car lors de leur implémentation nous avions déjà fait la plupart des fonctions, notamment destruction, gravité et swap, il a donc fallu recoder ces fonctions pour pouvoir gérer les Bad blocks, puisque ceux-ci ont un comportement assez particulier, bien différents des simples cases de couleurs.


